-----> Building on the Heroku-24 stack
-----> Fetching heroku/python buildpack...
       buildpack downloaded
-----> Python app detected
-----> Using Python 3.9.13 specified in runtime.txt
 !     Warning: The runtime.txt file is deprecated.
 !     
 !     The runtime.txt file is deprecated since it has been replaced
 !     by the more widely supported .python-version file:
 !     https://devcenter.heroku.com/changelog-items/3141
 !     
 !     Please switch to using a .python-version file instead.
 !     
 !     Delete your runtime.txt file and create a new file in the
 !     root directory of your app named:
 !     .python-version
 !     
 !     Make sure to include the '.' character at the start of the
 !     filename. Don't add a file extension such as '.txt'.
 !     
 !     In the new file, specify your app's major Python version number
 !     only. Don't include quotes or a 'python-' prefix.
 !     
 !     For example, to request the latest version of Python 3.9,
 !     update your .python-version file so it contains exactly:
 !     3.9
 !     
 !     We strongly recommend that you don't specify the Python patch
 !     version number, since it will pin your app to an exact Python
 !     version and so stop your app from receiving security updates
 !     each time it builds.
 !     
 !     In the future support for runtime.txt will be removed and
 !     this warning will be made an error.
 !     Warning: Support for Python 3.9 is ending soon!
 !     
 !     Python 3.9 will reach its upstream end-of-life in October 2025,
 !     at which point it will no longer receive security updates:
 !     https://devguide.python.org/versions/#supported-versions
 !     
 !     As such, support for Python 3.9 will be removed from this
 !     buildpack on 7th January 2026.
 !     
 !     Upgrade to a newer Python version as soon as possible, by
 !     changing the version in your runtime.txt file.
 !     
 !     For more information, see:
 !     https://devcenter.heroku.com/articles/python-support#supported-python-versions
 !     Warning: A Python patch update is available!
 !     
 !     Your app is using Python 3.9.13, however, there is a newer
 !     patch release of Python 3.9 available: 3.9.22
 !     
 !     It is important to always use the latest patch version of
 !     Python to keep your app secure.
 !     
 !     Update your runtime.txt file to use the new version.
 !     
 !     We strongly recommend that you don't pin your app to an
 !     exact Python version such as 3.9.13, and instead only specify
 !     the major Python version of 3.9 in your runtime.txt file.
 !     This will allow your app to receive the latest available Python
 !     patch version automatically and prevent this warning.
-----> Installing Python 3.9.13
-----> Installing pip 25.0.1, setuptools 70.3.0 and wheel 0.45.1
-----> Installing SQLite3
-----> Installing dependencies using 'pip install -r requirements.txt'
       Collecting flask==2.0.1 (from -r requirements.txt (line 1))
         Downloading Flask-2.0.1-py3-none-any.whl.metadata (3.8 kB)
       Collecting Flask-Login==0.5.0 (from -r requirements.txt (line 2))
         Downloading Flask_Login-0.5.0-py2.py3-none-any.whl.metadata (1.7 kB)
       Collecting Flask-Session==0.4.0 (from -r requirements.txt (line 3))
         Downloading Flask_Session-0.4.0-py2.py3-none-any.whl.metadata (924 bytes)
       Collecting Flask-SQLAlchemy==3.0.3 (from -r requirements.txt (line 4))
         Downloading Flask_SQLAlchemy-3.0.3-py3-none-any.whl.metadata (3.4 kB)
       Collecting Flask-WTF==1.0.0 (from -r requirements.txt (line 5))
         Downloading Flask_WTF-1.0.0-py3-none-any.whl.metadata (1.9 kB)
       Collecting gunicorn==20.1.0 (from -r requirements.txt (line 6))
         Downloading gunicorn-20.1.0-py3-none-any.whl.metadata (3.8 kB)
       Collecting matplotlib==3.5.1 (from -r requirements.txt (line 7))
         Downloading matplotlib-3.5.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.whl.metadata (6.7 kB)
       Collecting numpy==1.22.3 (from -r requirements.txt (line 8))
         Downloading numpy-1.22.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.0 kB)
       Collecting pandas==1.4.2 (from -r requirements.txt (line 9))
         Downloading pandas-1.4.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)
       Collecting psycopg2-binary==2.9.3 (from -r requirements.txt (line 10))
         Downloading psycopg2_binary-2.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.4 kB)
       Collecting python-dateutil==2.8.2 (from -r requirements.txt (line 11))
         Downloading python_dateutil-2.8.2-py2.py3-none-any.whl.metadata (8.2 kB)
       Collecting requests==2.27.1 (from -r requirements.txt (line 12))
         Downloading requests-2.27.1-py2.py3-none-any.whl.metadata (5.0 kB)
       Collecting oauthlib==3.2.0 (from -r requirements.txt (line 13))
         Downloading oauthlib-3.2.0-py3-none-any.whl.metadata (7.4 kB)
       Collecting openai==0.27.0 (from -r requirements.txt (line 14))
         Downloading openai-0.27.0-py3-none-any.whl.metadata (13 kB)
       Collecting werkzeug==2.0.3 (from -r requirements.txt (line 15))
         Downloading Werkzeug-2.0.3-py3-none-any.whl.metadata (4.5 kB)
       Collecting wtforms==3.0.1 (from -r requirements.txt (line 16))
         Downloading WTForms-3.0.1-py3-none-any.whl.metadata (3.2 kB)
       Collecting email-validator==1.1.3 (from -r requirements.txt (line 17))
         Downloading email_validator-1.1.3-py2.py3-none-any.whl.metadata (18 kB)
       Collecting trafilatura==1.4.0 (from -r requirements.txt (line 18))
         Downloading trafilatura-1.4.0-py3-none-any.whl.metadata (13 kB)
       Collecting sqlalchemy==1.4.46 (from -r requirements.txt (line 19))
         Downloading SQLAlchemy-1.4.46-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (10 kB)
       Collecting python-dotenv==0.20.0 (from -r requirements.txt (line 20))
         Downloading python_dotenv-0.20.0-py3-none-any.whl.metadata (19 kB)
       Collecting pytest==7.3.1 (from -r requirements.txt (line 21))
         Downloading pytest-7.3.1-py3-none-any.whl.metadata (7.9 kB)
       Collecting Jinja2>=3.0 (from flask==2.0.1->-r requirements.txt (line 1))
         Downloading jinja2-3.1.6-py3-none-any.whl.metadata (2.9 kB)
       Collecting itsdangerous>=2.0 (from flask==2.0.1->-r requirements.txt (line 1))
         Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
       Collecting click>=7.1.2 (from flask==2.0.1->-r requirements.txt (line 1))
         Downloading click-8.1.8-py3-none-any.whl.metadata (2.3 kB)
       Collecting cachelib (from Flask-Session==0.4.0->-r requirements.txt (line 3))
         Downloading cachelib-0.13.0-py3-none-any.whl.metadata (2.0 kB)
       INFO: pip is looking at multiple versions of flask-sqlalchemy to determine which version is compatible with other requirements. This could take a while.
       ERROR: Cannot install -r requirements.txt (line 2), -r requirements.txt (line 3), -r requirements.txt (line 4) and flask==2.0.1 because these package versions have conflicting dependencies.
       
       The conflict is caused by:
           The user requested flask==2.0.1
           flask-login 0.5.0 depends on Flask
           flask-session 0.4.0 depends on Flask>=0.8
           flask-sqlalchemy 3.0.3 depends on Flask>=2.2
       
       To fix this you could try to:
       1. loosen the range of package versions you've specified
       2. remove package versions to allow pip to attempt to solve the dependency conflict
       
       ERROR: ResolutionImpossible: for help visit https://pip.pypa.io/en/latest/topics/dependency-resolution/#dealing-with-dependency-conflicts
 !     Error: Unable to install dependencies using pip.
 !     